plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm'
}

sourceCompatibility = 17
archivesBaseName = "libsignal-server"

repositories {
    mavenCentral()
    mavenLocal()
}

sourceSets {
    main {
        java {
            // Include libsignal sources shared between the client and server
            srcDir '../shared/java'
        }
        kotlin {
            srcDir 'src/main/java'
            // Include libsignal sources shared between the client and server
            srcDir '../shared/java'
        }
        resources {
            srcDir '../shared/resources'
        }
    }
    test {
        java {
            srcDir '../shared/test/java'
        }
        kotlin {
            srcDir 'src/test/java'
            srcDir '../shared/test/java'
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.13'
}

test {
    jvmArgs '-Xcheck:jni'
    testLogging {
        events 'passed','skipped','failed'
        showStandardStreams = true
        showExceptions true
        exceptionFormat 'full'
        showCauses true
        showStackTraces true
    }
}

java {
    withSourcesJar()
}

sourcesJar {
    // Cut down on artifact size by leaving these out of the sources jar.
    exclude '*.dll'
    exclude '*.dylib'
    exclude '*.so'
}

task dokkaHtmlJar(type: Jar) {
    dependsOn(dokkaHtml)
    from(dokkaHtml)
    archiveClassifier.set("dokka")
}

task dokkaJavadocJar(type: Jar) {
    dependsOn(dokkaJavadoc)
    from(dokkaJavadoc)
    archiveClassifier.set("javadoc")
}

processResources {
    dependsOn ':makeJniLibrariesServer'
}

afterEvaluate {
    tasks.withType(Exec).configureEach { task ->
        task.doFirst {
            logger.lifecycle("[Exec] Running command: ${task.commandLine.join(' ')}")
        }
    }
}

// MARK: Publishing

publishing {
    publications {
        server(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
            artifact dokkaHtmlJar
            artifact dokkaJavadocJar

            pom {
                name = archivesBaseName
                description = 'Signal Protocol cryptography library for Java (server-side)'
                url = 'https://github.com/mollyim/libsignal'

                scm {
                    url = 'https://github.com/mollyim/libsignal/'
                    connection = 'scm:git:git://github.com/mollyim/libsignal.git'
                    developerConnection = 'scm:git:git@github.com:mollyim/libsignal.git'
                }

                licenses {
                    license {
                        name = 'AGPLv3'
                        url = 'https://www.gnu.org/licenses/agpl-3.0.txt'
                    }
                }

                organization {
                    url = 'https://molly.im'
                }
            }
        }
    }
    repositories {
        rootProject.ext.addCloudsmithRepo(delegate)
    }
}
